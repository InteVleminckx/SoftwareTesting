<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>jpacman</groupId>
  <artifactId>jpacman</artifactId>
  <packaging>jar</packaging>
  <version>3.0.1</version>
  <name>jpacman</name>
 
  <dependencies>
    <!-- JUnit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>

    <!-- JMock -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.3.1</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!-- Changing from 1.5 to 17 -->
          <source>17</source>
          <!-- Changing from 1.5 to 17 -->
          <target>17</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>jpacman.TestAll</mainClass>
              <addClasspath>true</addClasspath>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <!-- Change version 2.3 to 3 to make -disableassertions argument work -->
        <version>3.0.0</version>
        <configuration>
          <!-- forkMode deprecated, use the two other tags instead -->
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <!-- change -enableassertions to -disableassertions to disable the assertions -->
          <!-- @{argLine} makes JaCoCo works, otherwise it won't be triggered:
            This ensures that the JaCoCo agent is included in the JVM arguments for the test execution.
            The token @{argLine} is a placeholder that expands to the existing argLine values.
            Appending -enableassertions afterward prevents overwriting the Jacoco agent configuration, which is essential for generating the jacoco.exec file.
          -->
          <argLine>@{argLine} -enableassertions</argLine>
        </configuration>
      </plugin>

      <!-- Add jacoco -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.12</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <!-- Runs before tests to attach JaCoCo agent for code instrumentation and coverage collection. -->
            <phase>test-compile</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>report</id>
            <!-- Runs during site generation to create the test coverage report after test execution. -->
            <phase>site</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin> <!-- JUnit report -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.3</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <!-- Adding a version -->
        <version>3.11.2</version>
      </plugin>
    </plugins>
  </reporting>
</project>
